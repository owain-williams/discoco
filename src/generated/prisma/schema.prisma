// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  clerkId  String  @unique
  email    String  @unique
  username String  @unique
  imageUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  servers  Member[]
  channels Channel[]
  messages Message[]

  @@map("users")
}

model Server {
  id         String  @id @default(cuid())
  name       String
  imageUrl   String?
  inviteCode String  @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  members  Member[]
  channels Channel[]

  @@map("servers")
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

model Member {
  id   String     @id @default(cuid())
  role MemberRole @default(GUEST)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  serverId String
  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, serverId])
  @@map("members")
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id   String      @id @default(cuid())
  name String
  type ChannelType @default(TEXT)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  serverId String
  server   Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  messages Message[]

  @@map("channels")
}

model Message {
  id      String  @id @default(cuid())
  content String
  fileUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  channelId String
  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)

  @@map("messages")
}
